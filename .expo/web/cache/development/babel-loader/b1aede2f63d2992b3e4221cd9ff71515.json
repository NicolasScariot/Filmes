{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Container, SearchButton, SearchContainer, Input, Title, BannerButton, Banner, SliderMovie } from \"./styles\";\nimport { getListMovies, randomBanner } from \"../../utils/movie\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Header from \"../../components/Header\";\nimport { Feather } from '@expo/vector-icons';\nimport SliderItem from \"../../components/SliderItem\";\nimport api, { key } from \"../../services/api\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Home() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      nowMovies = _useState2[0],\n      setNowMovies = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popularMovies = _useState4[0],\n      setPopularMovies = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      topMovies = _useState6[0],\n      setTopMovies = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bannerMovie = _useState8[0],\n      setBannnerMovie = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      input = _useState12[0],\n      setInput = _useState12[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var isActive = true;\n    var ac = new AbortController();\n\n    function getMovies() {\n      var _await$Promise$all, _await$Promise$all2, nowData, popularData, topData, nowList, popularList, topList;\n\n      return _regeneratorRuntime.async(function getMovies$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.all([api.get('/movie/now_playing', {\n                params: {\n                  api_key: key,\n                  language: 'pt-BR',\n                  page: 1\n                }\n              }), api.get('/movie/popular', {\n                params: {\n                  api_key: key,\n                  language: 'pt-BR',\n                  page: 1\n                }\n              }), api.get('/movie/top_rated', {\n                params: {\n                  api_key: key,\n                  language: 'pt-BR',\n                  page: 1\n                }\n              })]));\n\n            case 2:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 3);\n              nowData = _await$Promise$all2[0];\n              popularData = _await$Promise$all2[1];\n              topData = _await$Promise$all2[2];\n\n              if (isActive) {\n                nowList = getListMovies(10, nowData.data.results);\n                popularList = getListMovies(5, popularData.data.results);\n                topList = getListMovies(5, topData.data.results);\n                setBannnerMovie(nowData.data.results[randomBanner(nowData.data.results)]);\n                setNowMovies(nowList);\n                setPopularMovies(popularList);\n                setTopMovies(topList);\n                setLoading(false);\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getMovies();\n    return function () {\n      isActive = false;\n      ac.abort();\n    };\n  }, []);\n\n  function navigateDetailsPage(item) {\n    navigation.navigate('Detail', {\n      id: item.id\n    });\n  }\n\n  function handleSearchMovie() {\n    if (input === '') return;\n    navigation.navigate('Search', {\n      name: input\n    });\n    setInput('');\n  }\n\n  if (loading) {\n    _jsx(Container, {\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#FFF\"\n      })\n    });\n  }\n\n  return _jsxs(Container, {\n    children: [_jsx(Header, {\n      title: \"Nicoflix\"\n    }), _jsxs(SearchContainer, {\n      children: [_jsx(Input, {\n        placeholder: \"Halo\",\n        placeholderTextColor: \"#ddd\",\n        value: input,\n        onChangeText: function onChangeText(text) {\n          return setBannnerMovie(text);\n        }\n      }), _jsx(SearchButton, {\n        onPress: handleSearchMovie,\n        children: _jsx(Feather, {\n          name: \"search\",\n          size: 30,\n          color: \"#FFF\"\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      showVerticalScrollIndicator: false,\n      children: [_jsx(Title, {\n        children: \"Em cartaz\"\n      }), _jsx(BannerButton, {\n        activeOpacity: 0.7,\n        onPress: function onPress() {\n          return navigateDetailsPage(bannerMovie);\n        },\n        children: _jsx(Banner, {\n          resizeMethodod: \"resize\",\n          source: {\n            uri: \"https://image.tmdb.org/t/p/original/\" + bannerMovie.poster_path\n          }\n        })\n      }), _jsx(SliderMovie, {\n        horizontal: true,\n        showHorizontalScrollIndicator: false,\n        data: nowMovies,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return _jsx(SliderItem, {\n            data: item,\n            navigatePage: function navigatePage() {\n              return navigateDetailsPage(item);\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return String(item.id);\n        }\n      }), _jsx(Title, {\n        children: \"Populares\"\n      }), _jsx(SliderMovie, {\n        horizontal: true,\n        showHorizontalScrollIndicator: false,\n        data: popularMovies,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsx(SliderItem, {\n            data: item,\n            navigatePage: function navigatePage() {\n              return navigateDetailsPage(item);\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return String(item.id);\n        }\n      }), _jsx(Title, {\n        children: \"Mais votados\"\n      }), _jsx(SliderMovie, {\n        horizontal: true,\n        showHorizontalScrollIndicator: false,\n        data: topMovies,\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(SliderItem, {\n            data: item,\n            navigatePage: function navigatePage() {\n              return navigateDetailsPage(item);\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return String(item.id);\n        }\n      })]\n    })]\n  });\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Nico/Projetos SENAI/filmes/filmes/src/pages/Home/index.js"],"names":["React","useState","useEffect","Container","SearchButton","SearchContainer","Input","Title","BannerButton","Banner","SliderMovie","getListMovies","randomBanner","Header","Feather","SliderItem","api","key","useNavigation","Home","nowMovies","setNowMovies","popularMovies","setPopularMovies","topMovies","setTopMovies","bannerMovie","setBannnerMovie","loading","setLoading","input","setInput","navigation","isActive","ac","AbortController","getMovies","Promise","all","get","params","api_key","language","page","nowData","popularData","topData","nowList","data","results","popularList","topList","abort","navigateDetailsPage","item","navigate","id","handleSearchMovie","name","text","uri","poster_path","String"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react'; // Variáveis de estado (podem mudar)\r\nimport {\r\n    Container,\r\n    SearchButton,\r\n    SearchContainer,\r\n    Input,\r\n    Title,\r\n    BannerButton,\r\n    Banner,\r\n    SliderMovie\r\n} from './styles';\r\nimport { getListMovies, randomBanner } from '../../utils/movie';\r\n\r\nimport { ScrollView, ActivityIndicator } from 'react-native';\r\nimport Header from '../../components/Header';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport SliderItem from '../../components/SliderItem';\r\nimport api, { key } from '../../services/api';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nfunction Home() {\r\n\r\n\r\n    const [nowMovies, setNowMovies] = useState([]);  // setNowMoveis usadodo para fazer alterações\r\n    const [popularMovies, setPopularMovies] = useState([]);\r\n    const [topMovies, setTopMovies] = useState([]);\r\n    const [bannerMovie, setBannnerMovie] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [input, setInput] = useState('');\r\n    const navigation = useNavigation();\r\n\r\n    useEffect(() => {\r\n        let isActive = true;\r\n        const ac = new AbortController();\r\n\r\n        async function getMovies() {\r\n            const [nowData, popularData, topData] = await Promise.all([\r\n                api.get('/movie/now_playing', {\r\n                    params: {\r\n                        api_key: key,\r\n                        language: 'pt-BR',\r\n                        page: 1,\r\n                    }\r\n                }),\r\n                api.get('/movie/popular', {\r\n                    params: {\r\n                        api_key: key,\r\n                        language: 'pt-BR',\r\n                        page: 1,\r\n                    }\r\n                }),\r\n                api.get('/movie/top_rated', {\r\n                    params: {\r\n                        api_key: key,\r\n                        language: 'pt-BR',\r\n                        page: 1,\r\n                    }\r\n                }),\r\n            ])\r\n            if(isActive){\r\n                const nowList = getListMovies(10, nowData.data.results);\r\n                const popularList = getListMovies(5, popularData.data.results);\r\n                const topList = getListMovies(5, topData.data.results);\r\n\r\n                \r\n                setBannnerMovie(nowData.data.results[randomBanner(nowData.data.results)]);\r\n                setNowMovies(nowList);\r\n                setPopularMovies(popularList);\r\n                setTopMovies(topList);\r\n                setLoading(false); \r\n            }\r\n        }\r\n        getMovies();\r\n\r\n        return () => {\r\n            isActive = false;\r\n            ac.abort();\r\n        }\r\n    },[])\r\n\r\n    function navigateDetailsPage(item){\r\n        navigation.navigate('Detail', {id: item.id})\r\n    }\r\n\r\n    function handleSearchMovie(){\r\n        if(input === '') return;\r\n        \r\n        navigation.navigate('Search', {name: input })\r\n        setInput('');\r\n    }\r\n\r\n    if(loading){\r\n        <Container>\r\n            <ActivityIndicator size=\"large\" color=\"#FFF\"/>\r\n        </Container>\r\n    }\r\n    return (\r\n        <Container>\r\n            <Header title=\"Nicoflix\" />\r\n            <SearchContainer>\r\n                <Input\r\n                    placeholder=\"Halo\"\r\n                    placeholderTextColor=\"#ddd\"\r\n                    value={input}\r\n                    onChangeText={(text) => setBannnerMovie(text)}\r\n                />\r\n                <SearchButton onPress={ handleSearchMovie }>\r\n                    <Feather name=\"search\" size={30} color=\"#FFF\" />\r\n                </SearchButton>\r\n            </SearchContainer>\r\n\r\n            <ScrollView showVerticalScrollIndicator={false}>\r\n                <Title>Em cartaz</Title>\r\n                <BannerButton activeOpacity={0.7} onPress={() => navigateDetailsPage(bannerMovie)}>\r\n                    <Banner\r\n                        resizeMethodod=\"resize\"\r\n                        source={{ uri: `https://image.tmdb.org/t/p/original/${bannerMovie.poster_path}` }}\r\n                    />\r\n                </BannerButton>\r\n\r\n                <SliderMovie\r\n                    horizontal={true}\r\n                    showHorizontalScrollIndicator={false}\r\n                    data={nowMovies}\r\n                    renderItem={({ item }) => <SliderItem data={item} navigatePage={() => navigateDetailsPage(item)} /> }\r\n                    keyExtractor={ (item) => String(item.id)}\r\n                />\r\n\r\n                <Title>Populares</Title>\r\n                <SliderMovie\r\n                    horizontal={true}\r\n                    showHorizontalScrollIndicator={false}\r\n                    data={popularMovies}\r\n                    renderItem={({ item }) => <SliderItem data={item} navigatePage={() => navigateDetailsPage(item)} /> }\r\n                    keyExtractor={ (item) => String(item.id)}\r\n                />\r\n\r\n                <Title>Mais votados</Title>\r\n                <SliderMovie\r\n                    horizontal={true}\r\n                    showHorizontalScrollIndicator={false}\r\n                    data={topMovies}\r\n                    renderItem={({ item }) => <SliderItem data={item} navigatePage={() => navigateDetailsPage(item)} /> }\r\n                    keyExtractor={ (item) => String(item.id)}\r\n                />\r\n            </ScrollView>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n// instalei : Axios, Stars\r\n\r\n// "]},"metadata":{},"sourceType":"module"}